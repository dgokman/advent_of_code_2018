class NilClass
  def method_missing(*args); nil; end
end

class Array
  def fetch(index)
    if index < 0
      return nil
    end
    self[index]
  end
end

A = "....||.#|..|...|.#..#...|.|.....|.....##|.....||..
....#.|..|.....#|....|#|##|...#........|...#.#|.#.
.#||....|...#####..|.|.#..|..|.|..#.|#....#..||#..
.....|....|..|....#....#..#...||....|.....#.|#..|#
.|.#||##.|..#....|#.|..|||#..##.|.#.|..##..|...|.|
.|.|...|...|#.|.....#...#|.#.....#..|#........###.
......|#|..#....|.#.#|....||#|.|#.....#|..#.#||...
.|.......##|..|..#|....|.|.|....#..|#|#.#...#.||##
##|..#.#..#||.###.|......|#.|....#...#.|...#....#|
..|###|#....#.|.#|#|.....|..|.||#|.|#.||...|##...#
...#....|.||||.|.|.##...#..|.||.|....#|#|#.|..|||.
|#....#...##..#||..|..#|.......|#|....|.|.|..|##..
|#....|.|..|..|..#.#......|..|.|..|||.#||...#.#.||
...|.|.....#.##|....|..#.|.....||..##..#..|||.....
.###.#.|.|||#.#.|.|.|...#..###..#|.........|.....#
|..#..|#..#........#.#.###.#...|.|.....|.||.|.|.||
|##.|..#..#...#|.........#|...#||.|..#|#.|.|..||..
....||.|....#.....|......#.|.|#.#.......|.|...#...
|.#.#|..#|#..#.#......#||.#..|||.#.#..#.||.####.#.
|.||.|.|.|#|.#.#|.#.|||..|........|..#..|.......|.
##..|.#..||............|||..#....|.....###|#...|#.
#|.|..#.|.|......|#|#.||.|....#...#....|...|...|..
#.#.#...##...#....|#|#||.#|#...|#||#|....|..|...||
.|.#.|.|...###.|..##..||#..|.....||.|.|....##..#|#
..#|#|..##...##|..|||||.|....|.#..|...|...#.#|||..
..|.|....#.##.##|..|#..|...||...|..||##..##...#.##
..#|###..##....##|.||.|.|.||#...|.#.#|#.##||.|..|.
...|#...|#..#.....#|.....##..##.......#...##.|...#
.|..#.##|....#.#.#...|...##........|##|..#.|...|..
......|#....#.........#.|.....||...#|.|...#.|#....
..|.#..###||...#|###...|.|...|.|....#...#..|.|.#.|
.#|....||#.#|..#.#|..##.........|#.|.....#....|||.
....#.#....#|.|#.#.#.|#............|.#.#....|#...|
..|#....#|...#.#..#.#.#||..#.#..|......##.#.||....
..|#....|#..|.#..#....#.|#.||.....#..#.#|.#...|..#
.#........|||.......|....|||.#|#..#.#|#........||.
#..|.....#...#..#.|#....##...##.##...#||.........|
..|.##.|..|...|..#|#.|.........||...##......###.|.
.|..|...#....||..#....#||#...#.#......##......#|.#
.|..#......#.|.#.##.|..|...#.|##..|||...|.......#.
...#..#..|#.|.....#||.|....#...|##|##.....|.#..|..
#.....#...#...##.|....|......##...|...#.#.#.|.....
....#..|.|.|###|.##.|.#|.|.||.|#..|#..#...|.##.#..
..|.|.#.|#.#...##.#||#...#..||.#.|#..|###....|#...
|.|..........|.#......#..#|.#...#.....#.#.#|.###.|
#..#|||....#..|....##|...|.#.|##||.|..|.#|.|...|#|
.|###..#.....|.#.||.#..|#...#.#|.#|.|.##|....#|#..
.|...#...##......|..#.|#|.#.##......#.|......|...|
#.#..|#.#...#.|#|....#|##..#....##|..#.|..|#...|..
.#.#..|.#..#........##.|#..|##||......|..#...#...."

# 1

field = A.split("\n").map {|x| x.split("")}
new_field = Marshal.load(Marshal.dump(field))

10.times do |n|
  i = 0
  j = 0
  while i < field.length
    while j < field[i].length
      adjacent_acres = [field.fetch(i-1).fetch(j-1), field.fetch(i-1).fetch(j), field.fetch(i-1).fetch(j+1), 
          field.fetch(i).fetch(j-1), field.fetch(i+1).fetch(j-1), field.fetch(i+1).fetch(j), 
          field.fetch(i+1).fetch(j+1), field.fetch(i).fetch(j+1)]

      if field[i][j] == "."
        if adjacent_acres.count("|") >= 3
          new_field[i][j] = "|"
        end
      end
      if field[i][j] == "|"  
        if adjacent_acres.count("#") >= 3
          new_field[i][j] = "#"
        end
      end  
      if field[i][j] == "#"
        unless adjacent_acres.count("#") >= 1 && adjacent_acres.count("|") >= 1 
          new_field[i][j] = "."
        end
      end
      j += 1

    end
    i += 1
    j = 0
  end  

  
  field = Marshal.load(Marshal.dump(new_field))
  new_field = Marshal.load(Marshal.dump(field))
end 

p new_field.flatten.count("#")*new_field.flatten.count("|")

# 2

REPEATING_VALUES = [183810,180642,183300,179922,184960,185762,189760,189284,193242,192676,195092,193600,199374,199650,203548,204152,207345,205200,208950,208494,210160,206388,205093,200566,199056,194481,193973,187488]

p REPEATING_VALUES[(10**9) % 28]

